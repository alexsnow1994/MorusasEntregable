(()=>{"use strict";var e=["second","minute","hour","day","week","month","year"],t=["秒","分钟","小时","天","周","个月","年"],n={},o=function(e,t){n[e]=t},a=[60,60,24,7,365/7/12,12];function s(e){return e instanceof Date?e:!isNaN(e)||/^\d+$/.test(e)?new Date(parseInt(e)):(e=(e||"").trim().replace(/\.\d+/,"").replace(/-/,"/").replace(/-/,"/").replace(/(\d)T(\d)/,"$1 $2").replace(/Z/," UTC").replace(/([+-]\d\d):?(\d\d)/," $1$2"),new Date(e))}o("en_US",(function(t,n){if(0===n)return["just now","right now"];var o=e[Math.floor(n/2)];return t>1&&(o+="s"),[t+" "+o+" ago","in "+t+" "+o]})),o("zh_CN",(function(e,n){if(0===n)return["刚刚","片刻后"];var o=t[~~(n/2)];return[e+" "+o+"前",e+" "+o+"后"]}));const d=new class{constructor(){this.URI="http://localhost:5000/api/books",this.URID="http://localhost:5000/api/books/"}async getBooks(){return(await fetch(this.URI)).json()}async postBooks(e){let t=(await fetch(this.URI,{method:"POST",body:e})).json();console.log(t)}async updateBooks(e){let t=await fetch(`${this.URID}${e}`,{headers:{"Content-Type":"application/json"},method:"PUT",body:e});return(await t.json())()}async deleteBooks(e){let t=await fetch(`${this.URID}${e}`,{headers:{"Content-Type":"application/json"},method:"DELETE"}),n=await t.json();console.log(n)}},r=class{async renderBooks(){let e=await d.getBooks(),t=document.getElementById("books-cards");t.innerHTML="",e.forEach((e=>{let o=document.createElement("div");var d,r,l,i;o.className="",o.innerHTML=`\n            \n             <div class="cards m-2">\n                <div class="row">\n                    <div class="col-md-4>\n                    <a href="#"><img src="http://localhost:5000${e.imagePath}" alt="" class="img-fluid"></a>\n                    </div>\n                    <div class="col-md-8">\n                    <div class="card-block p-2">\n                        <h4 class="card-title">"${e.title}"</h4>\n                        <p class="card-text">"${e.author}"</p>\n                        <p>BookId ${e._id}</p>\n                        <a href=# class="bt btn-danger delete" _id="${e._id}">Delete</a>  \n                    </div>\n                    </div>\n                    \n                </div>\n                <div class="card-footer">\n                    ${d=e.created_at,i=function(e,t){return(+(t?s(t):new Date)-+s(e))/1e3}(d,l&&l.relativeDate),function(e,t){for(var n=e<0?1:0,o=e=Math.abs(e),s=0;e>=a[s]&&s<a.length;s++)e/=a[s];return(e=Math.floor(e))>(0==(s*=2)?9:1)&&(s+=1),t(e,s,o)[n].replace("%s",e.toString())}(i,function(e){return n[e]||n.en_US}(r))}\n                    </div>\n             </div>\n             \n            `,t.appendChild(o)}))}async updateBooks(e){await d.updateBooks(e),this.clearBooksForm,this.renderBooks}async addNewBooks(e){await d.postBooks(e),this.clearBooksForm(),this.renderBooks()}async clearBooksForm(){document.getElementById("book-form").reset()}async renderMessage(e,t,n){let o=document.createElement("div");o.className=`alert alert-${t} message `,o.appendChild(document.createTextNode(e));let a=document.querySelector(".col-md-4"),s=document.querySelector("#book-form");a.insertBefore(o,s),setTimeout((()=>{document.querySelector(".message").remove()}),n)}async deleteBook(e){await d.deleteBooks(e),this.renderBooks()}};document.addEventListener("DOMContentLoaded",(()=>{(new r).renderBooks()})),document.getElementById("book-form").addEventListener("submit",(e=>{let t=document.getElementById("title").value,n=document.getElementById("author").value,o=document.getElementById("isbn").value,a=document.getElementById("image").files,s=new FormData;s.append("image",a[0]),s.append("isbn",o),s.append("author",n),s.append("title",t);let d=new r;new class{constructor(e,t,n){this.title,this.author,this.isbn}}(t,n,o),""===t||""===n||""===o?d.renderMessage("Por favor rellena todos los espacios","danger",3e3):(d.addNewBooks(s),d.renderMessage("New Book Added Successfully","success",2e3))})),document.getElementById("books-cards").addEventListener("click",(e=>{if(e.target.classList.contains("delete")){console.log(e.target.classList.contains("delete"));let t=new r;t.deleteBook(e.target.getAttribute("_id")),t.renderMessage("deleting book","danger",3e3)}e.preventDefault()})),document.getElementById("book-form").addEventListener("submit",(e=>{if(e.submitter.classList.contains("UPDATE")){console.log(e.submitter.classList.contains("UPDATE"));let t=document.getElementById("title").value,n=document.getElementById("author").value,o=document.getElementById("isbn").value,a=document.getElementById("image").files;const s=new Set;s.add("image",a[0]),s.add("title",t),s.add("author",n),s.add("isbn",o);let d=new r;d.updateBooks(e.submitter.getAttribute("_id")),d.renderMessage("update","warning",3e3)}e.preventDefault()}))})();
//# sourceMappingURL=bundle.js.map